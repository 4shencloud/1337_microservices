services:
  notification-service:
    build:
      context: ./NotificationService
    container_name: notification-service
    ports:
      - "6001:6001"
    networks:
      - app-network
    depends_on:
      - mongo
      - rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    build:
      context: ./UserService
    container_name: user-service
    ports:
      - "6002:6002"
    networks:
      - app-network
    depends_on:
      - mongo
      - rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: qwe
      RABBITMQ_DEFAULT_PASS: qwe
    configs:
      - source: rabbitmq-plugins
        target: /etc/rabbitmq/enabled_plugins
    volumes:
      - rabbitmq-lib:/var/lib/rabbitmq/
      - rabbitmq-log:/var/log/rabbitmq
    networks:
      - app-network

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

networks:
  app-network:
    driver: bridge

configs:
  rabbitmq-plugins:
    content: "[rabbitmq_management]."  

volumes:
  rabbitmq-lib:
    driver: local
  rabbitmq-log:
    driver: local
  mongo-data:
    driver: local
